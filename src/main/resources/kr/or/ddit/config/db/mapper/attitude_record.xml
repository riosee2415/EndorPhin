<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="attitude_record">
	
	<!-- 근태항목 전체 가져오기 -->
	<select id="getAllAttitude_record" resultType="Attitude_recordVo">
		select  a.userid,
        a.usernm ,
        d.deptname,
        c.attitudecode,
        c.attitudename,
        to_char(b.startday,'yyyy-MM-dd') startday,
        to_char(b.endday,'yyyy-MM-dd') endday,
        trunc(b.endday-b.startday+1) days,
        c.basedays ,
        b.attitudememo
	    from employee a, attitude_record b, attitude c, dept d
		where a.userid = b.userid
	    and b.attitudecode = c.attitudecode
	    and a.deptcode = d.deptcode
	
	</select>
	
	
	<!-- 근태항목 데이터 추가하기 -->
	<insert id="insertAttitude_record" parameterType="Attitude_recordVo">
		insert into attitude_record
			(userid, startday, endday, attitudememo, status, statusname, attitudecode)
    	values
    		(#{userid},
    		 #{startday}, 
    		 #{endday},
    		 #{attitudememo},
    		 #{status},
    		 nvl(#{statusname, jdbcType=VARCHAR},null),
    		 #{attitudecode})
	</insert>
	
	
		<!-- 근태항목 삭제 -->
		<delete id="deleteAttitude_record" parameterType="map">
			delete from attitude_record
			where userid = #{userId}
		</delete>
	
	
			<!-- 근태항목 업데이트 -->
			<update id="updateAttitude_record" parameterType="Attitude_recordVo">
			update attitude_record set
			
			startday=nvl(#{startDay,jdbcType=VARCHAR},startDay),
			endday=nvl(#{endDay,jdbcType=VARCHAR},endDay),
			attitudememo=nvl(#{attitudeMemo,jdbcType=VARCHAR},attitudeMemo),
			status=nvl(#{status,jdbcType=VARCHAR},status)
			statusname=nvl(#{statusName,jdbcType=VARCHAR},statusName)
			attitudecode=nvl(#{attitudeCode,jdbcType=VARCHAR},attitudeCode)
		
			where userid=#{userId}
			</update>
			
			
			
			
			<!-- 근태항목 선택하여 가져오기 -->
	<select id="SearchAttitude_record" resultType="Attitude_recordVo"
		parameterType="Attitude_recordVo">
		select
            userid, startday, endday, attitudememo, status, statusname, attitudecode
        from attitude_record
        <where>
        	<if test="attitudeCode!=null">
    	    	 or userid like '%'||#{userId}||'%'
        	</if>
		</where>
	</select>
	
	
			<!-- 근태항목 선택하여 가져오기 -->
	<select id="SelectAttitude_record" resultType="Attitude_recordVo"
		parameterType="map">
		select
            userid, startday, endday, attitudememo, status, statusname, attitudecode
        from attitude_record
       where userid=#{userId}
	</select>












</mapper>



